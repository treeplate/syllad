// expected output: 1
// expected output: 2
// expected output: 3
// expected output: 5
// expected output: 7
// expected output: 10
// expected output: 12
// expected output: 15
// expected output: 18
// expected output: 1
IntegerFunctionFunction createCounterFactory() {
  // allocates a block
  //  - foo
  Integer foo = 0;
  IntegerFunction createCounter() {
    // receives a block A containing foo
    // allocates a block B:
    //  - A
    //    - foo
    //  - bar
    Integer bar = 1;
    IntegerFunction countFactory() {
      // receives a block B containing a block A containing foo, and containing bar
      // allocates a block C:
      //  - B
      //    - A
      //      - foo
      //    - bar
      Integer count() {
        // receives a block C
        // allocates a block D:
        //  - C
        //    - B
        //      - A
        //        - foo
        //      - bar
        Integer one() { return 1; }
        foo += bar;
        bar += one();
        return foo;
      }
      return count;
    }
    return countFactory();
  }
  return createCounter;
}

IntegerFunctionFunction createCounter = createCounterFactory();
IntegerFunction counterA = createCounter();
IntegerFunction counterB = createCounter();
IntegerFunction counterC = createCounter();
println(counterA());
println(counterB());
println(counterC());
println(counterB());
println(counterA());
println(counterB());
println(counterC());
println(counterC());
println(counterA());
println(createCounterFactory()()());