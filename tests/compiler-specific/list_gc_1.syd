// expected exit code is 0

Boolean assertsEnabled = false;
Boolean test() { assertsEnabled = true; return true; }
assert(test(), 'control');
if (!assertsEnabled) {
  println('FAIL: asserts not enabled');
  exit(1);
}

_gcLocked += 1;

Null test1() {
  IntegerList foo = []:Integer;
  append(foo, 2);
}

Null test2() {
  []:Integer;
  _garbageCollector();
}

Null test3() {
  WhateverList list = []:Whatever;
  append(list, list);
}

Null runGC() {
  _gcLocked -= 1;
  _garbageCollector();
  _gcLocked += 1;
}


assert(_debugLiveBlocks == 0, 'started with unexpected allocations');
test1();
runGC();
assert(_debugLiveBlocks == 0, 'leaked memory 1');

test2();
runGC();
assert(_debugLiveBlocks == 0, 'leaked memory 2');

test3();
runGC();
assert(_debugLiveBlocks == 0, 'leaked memory 3');